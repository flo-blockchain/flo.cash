{
    "docs": [
        {
            "location": "/",
            "text": "Overview\n\u00b6\n\n\n\n\n What is FLO?\n\u00b6\n\n\nFLO is a scrypt minable crypto-currency with quick transaction processing. It is based on the Bitcoin and Litecoin source code, with improvements in several areas. Florincoin also introduces a useful new feature - transaction comments. These transaction comments enable Florincoin to facilitate a number of unique applications and enhancements within the blockchain.\n\n\n\n\n\n\n What is a cryptocurrency?\n\u00b6\n\n\nA cryptocurrency is a system of \u2018value exchange\u2019, just like any real world currency you may be familiar with. Its main difference is that it is not controlled by a central government or group and thus cannot be manipulated or restricted in the way those currencies can be.\n\n\nAs an example, you may buy FLO from a fiat currency exchange and use it to directly purchase a product in a different country without having to pay high exchange rates.\nFLO uses a wallet to store, transfer and receive FLO. This wallet signs every transaction in and out with a special private key that is unique to you. This is how the network knows that the address sending the transaction is the correct one. Think of your bank account and PIN. When you use your card (wallet), you also enter your PIN (private key), so the bank knows it was you that authorized the transaction. When you first start using FLO, your wallet will generate a private key that you must not give to anyone.\n\n\n\n\n What is the blockchain?\n\u00b6\n\n\nThe blockchain is the heart of FLO. It is where all transactions that take place are stored. It is similar to a bank ledger in that it records all the activity that happens when FLO are transferred. This ledger is able to confirm that new transactions are valid and that no fraud is taking place.\n\n\nEach block in the blockchain is a record of transactions that have occurred since the last block (about 40 seconds). Every computer (node) in the FLO network shares this blockchain. Nodes in the network run an algorithm many times over a block looking for a solution with a known difficulty. This process is known as \u201cproof-of-work\u201d mining. Once the solution is found it is broadcast to the network. The network then verifies the solution (finding the solution is very hard, but verifying it is easy) and compensate the miners with FLO for the resources used to mine the block.",
            "title": "Home"
        },
        {
            "location": "/#overview",
            "text": "",
            "title": "Overview"
        },
        {
            "location": "/#what-is-flo",
            "text": "FLO is a scrypt minable crypto-currency with quick transaction processing. It is based on the Bitcoin and Litecoin source code, with improvements in several areas. Florincoin also introduces a useful new feature - transaction comments. These transaction comments enable Florincoin to facilitate a number of unique applications and enhancements within the blockchain.",
            "title": " What is FLO?"
        },
        {
            "location": "/#what-is-a-cryptocurrency",
            "text": "A cryptocurrency is a system of \u2018value exchange\u2019, just like any real world currency you may be familiar with. Its main difference is that it is not controlled by a central government or group and thus cannot be manipulated or restricted in the way those currencies can be.  As an example, you may buy FLO from a fiat currency exchange and use it to directly purchase a product in a different country without having to pay high exchange rates.\nFLO uses a wallet to store, transfer and receive FLO. This wallet signs every transaction in and out with a special private key that is unique to you. This is how the network knows that the address sending the transaction is the correct one. Think of your bank account and PIN. When you use your card (wallet), you also enter your PIN (private key), so the bank knows it was you that authorized the transaction. When you first start using FLO, your wallet will generate a private key that you must not give to anyone.",
            "title": " What is a cryptocurrency?"
        },
        {
            "location": "/#what-is-the-blockchain",
            "text": "The blockchain is the heart of FLO. It is where all transactions that take place are stored. It is similar to a bank ledger in that it records all the activity that happens when FLO are transferred. This ledger is able to confirm that new transactions are valid and that no fraud is taking place.  Each block in the blockchain is a record of transactions that have occurred since the last block (about 40 seconds). Every computer (node) in the FLO network shares this blockchain. Nodes in the network run an algorithm many times over a block looking for a solution with a known difficulty. This process is known as \u201cproof-of-work\u201d mining. Once the solution is found it is broadcast to the network. The network then verifies the solution (finding the solution is very hard, but verifying it is easy) and compensate the miners with FLO for the resources used to mine the block.",
            "title": " What is the blockchain?"
        },
        {
            "location": "/getting-started/obtaining-flo/",
            "text": "Obtaining FLO\n\u00b6\n\n\n\n\nOverview\n\u00b6\n\n\nThis article discusses some of the ways a user can acquire FLO\ncoins.\n\n\nThe five basic ways are:\n\n\n\n\nPurchase FLO for BTC through an exchange\n\n\nPoW mine for FLO\n\n\nContribute to FLO\n\n\nSell or trade goods or services with someone who already has FLO.\n\n\n\n\n\n\nPurchasing FLO\n\u00b6\n\n\nExchanges\n\u00b6\n\n\nOne way to acquire FLO is to purchase some on an exchange.\nSince the release of FLO on June 2013, four\ncryptocurrency exchanges have added support for FLO (last updated December 2017).\n\n\n\n\nPoloniex\n\n\nBittrex\n\n\nNova Exchange\n\n\nBarterDEX\n\n\n\n\nIf you need help obtaining Bitcoin to get started, the process is well documented in the \nBitcoin wiki\n.\n\n\nMine for FLO (PoW)\n\u00b6\n\n\nProof-of-Work (PoW) is a measure of using computational power to\ncreate and verify the cryptographically secure blockchain.  This is\nsimilar to traditional Bitcoin mining. You can mine for FLO at the following mining pools:\n\n\n\n\nAlexandria\n\n\nSuprnova\n\n\nAikapool\n\n\nItalyiimp\n\n\nTheCoin\n\n\n\n\n\n\nContribute to FLO\n\u00b6\n\n\nFLO is currently recruiting contractors - members of the community who are paid in FLO for their contributions. Come to our \nforum\n and tell us what would you like to contribute with.\n\n\n\n\nSell / Trade Goods or Services for FLO\n\u00b6\n\n\nAn alternative to obtaining FLO is to use your skills, knowledge,\nor experience by exchanging services for FLO as payment.  Services\ncan be anything that you are skilled at which are in need or\nrequested by other members of the FLO community.",
            "title": "Obtaining FLO"
        },
        {
            "location": "/getting-started/obtaining-flo/#obtaining-flo",
            "text": "",
            "title": "Obtaining FLO"
        },
        {
            "location": "/getting-started/obtaining-flo/#overview",
            "text": "This article discusses some of the ways a user can acquire FLO\ncoins.  The five basic ways are:   Purchase FLO for BTC through an exchange  PoW mine for FLO  Contribute to FLO  Sell or trade goods or services with someone who already has FLO.",
            "title": "Overview"
        },
        {
            "location": "/getting-started/obtaining-flo/#purchasing-flo",
            "text": "",
            "title": "Purchasing FLO"
        },
        {
            "location": "/getting-started/obtaining-flo/#exchanges",
            "text": "One way to acquire FLO is to purchase some on an exchange.\nSince the release of FLO on June 2013, four\ncryptocurrency exchanges have added support for FLO (last updated December 2017).   Poloniex  Bittrex  Nova Exchange  BarterDEX   If you need help obtaining Bitcoin to get started, the process is well documented in the  Bitcoin wiki .",
            "title": "Exchanges"
        },
        {
            "location": "/getting-started/obtaining-flo/#mine-for-flo-pow",
            "text": "Proof-of-Work (PoW) is a measure of using computational power to\ncreate and verify the cryptographically secure blockchain.  This is\nsimilar to traditional Bitcoin mining. You can mine for FLO at the following mining pools:   Alexandria  Suprnova  Aikapool  Italyiimp  TheCoin",
            "title": "Mine for FLO (PoW)"
        },
        {
            "location": "/getting-started/obtaining-flo/#contribute-to-flo",
            "text": "FLO is currently recruiting contractors - members of the community who are paid in FLO for their contributions. Come to our  forum  and tell us what would you like to contribute with.",
            "title": "Contribute to FLO"
        },
        {
            "location": "/getting-started/obtaining-flo/#sell-trade-goods-or-services-for-flo",
            "text": "An alternative to obtaining FLO is to use your skills, knowledge,\nor experience by exchanging services for FLO as payment.  Services\ncan be anything that you are skilled at which are in need or\nrequested by other members of the FLO community.",
            "title": "Sell / Trade Goods or Services for FLO"
        },
        {
            "location": "/getting-started/user-guides/flo-setup/",
            "text": "FLO Setup Guide\n\u00b6\n\n\nLast updated for v0.10.4.6\n\n\n\n\nFLO wallet is a software program where FLOs are stored. To be technically accurate, FLOs are not stored anywhere; there is a private key (secret number) for every FLO address that is saved in the FLO wallet of the person who owns the balance. FLO wallets facilitate sending and receiving FLOs and gives ownership of the FLO balance to the user.  The FLO wallet comes in many forms; desktop, mobile, web and hardware are the four main types of wallets.\n\n\n\n\nDownload and Install\n\u00b6\n\n\nThe latest version of FLO can be downloaded from \nhttp://flo.cash/\n. As of v0.10.4.6, FLO wallet is available for both Windows and macOS.\n\n\n\n\nWindows\n\n\n\n\n\n\n\n\nDownload the Windows installer \nflorincoin-0.10.4.6-qt-win64.zip\n.\n\n\n\n\n\n\nDouble click the installer and follow the instructions. This will install and automatically start up FLO to download the FLO blockchain and set up your wallet.\n\n\n\n\n\n\nThe installer adds a shortcut to FLO on your desktop for next time you want to use it.\n\n\n\n\n\n\n\n\nmacOS\n\n\n\n\n\n\n\n\nDownload the \nflorincoin-0.10.4.6-osx.dmg\n file.\n\n\n\n\n\n\nDouble click the \nflorincoin-0.10.4.6-osx.dmg\n file once downloaded to mount the disk image.\n\n\n\n\n\n\nDrag the Florincoin-Qt.app into the link to your Applications folder within the disk image.\n\n\n\n\n\n\n\n\nTroubleshooting\n\u00b6\n\n\nWhere does FLO store data/write log files?\n\n\nFLO stores the blockchain, your wallet, log files and its own configuration files all in a single directory. A different directory is used depending on the operating system:\n\n\n\n\n\n\n\n\nOS\n\n\nFLO data directory\n\n\n\n\n\n\n\n\n\n\nWindows\n\n\nC:\\Users\\<your-username>\\AppData\\Roaming\\Florincoin\n\n\n\n\n\n\nmacOS\n\n\n~/Library/Application Support/Florincoin",
            "title": "FLO Setup"
        },
        {
            "location": "/getting-started/user-guides/flo-setup/#flo-setup-guide",
            "text": "Last updated for v0.10.4.6   FLO wallet is a software program where FLOs are stored. To be technically accurate, FLOs are not stored anywhere; there is a private key (secret number) for every FLO address that is saved in the FLO wallet of the person who owns the balance. FLO wallets facilitate sending and receiving FLOs and gives ownership of the FLO balance to the user.  The FLO wallet comes in many forms; desktop, mobile, web and hardware are the four main types of wallets.",
            "title": "FLO Setup Guide"
        },
        {
            "location": "/getting-started/user-guides/flo-setup/#download-and-install",
            "text": "The latest version of FLO can be downloaded from  http://flo.cash/ . As of v0.10.4.6, FLO wallet is available for both Windows and macOS.   Windows     Download the Windows installer  florincoin-0.10.4.6-qt-win64.zip .    Double click the installer and follow the instructions. This will install and automatically start up FLO to download the FLO blockchain and set up your wallet.    The installer adds a shortcut to FLO on your desktop for next time you want to use it.     macOS     Download the  florincoin-0.10.4.6-osx.dmg  file.    Double click the  florincoin-0.10.4.6-osx.dmg  file once downloaded to mount the disk image.    Drag the Florincoin-Qt.app into the link to your Applications folder within the disk image.",
            "title": "Download and Install"
        },
        {
            "location": "/getting-started/user-guides/flo-setup/#troubleshooting",
            "text": "Where does FLO store data/write log files?  FLO stores the blockchain, your wallet, log files and its own configuration files all in a single directory. A different directory is used depending on the operating system:     OS  FLO data directory      Windows  C:\\Users\\<your-username>\\AppData\\Roaming\\Florincoin    macOS  ~/Library/Application Support/Florincoin",
            "title": "Troubleshooting"
        },
        {
            "location": "/building-dapps/flotorizer.net/",
            "text": "Flotorizer: An experiment on Blockchain for newbies. - by Davi Ortega @ortega_science\n\u00b6\n\n\nLet me preface this post by letting you know that I am not a developer, the only class related to programming that I ever took was 15 years ago, in Pascal \u2014 that\u2019s right, Pascal. I am a \nscientist\n and I learned how to program Python with friends, colleagues, the internet (thanks StackOverflow). My programming self-education was mostly oriented by challenges related to \nbioinformatics\n and scripting tools to analyze atomic trajectories of \nmolecular dynamics simulations\n. \n\n\nAll that to say that you don\u2019t need to know much about blockchain to make an app with \nFlotorizer\n. Why not? Because \nAlexandria API\n is a thing.\n\n\nThe beginnings\n\u00b6\n\n\nI started to learn Node.js about two years ago \u2014 not full time, I am a scientist remember? \u2014 because bioinformatics applications are much more fun (and useful) if they are interactive, and on the web \nso you can brag about it by sharing a link\n. I went to one of those \nNodeTogether\n seminar given by \nashley williams\n and learned enough to really get me going with Node.js. (Thanks \nashley\n). \n\n\nI also had a very good friend, Luke Ulrich, who knows a lot of javascript and were working on a project with me\u2026 anyways\u2026 two years in and I am embarrassed to say that I am still fumbling around with concepts such as promises and callbacks \u2014 fun huh?\n\n\nAnyways, when I started to check out the then florincoin ecosystem, I barely knew what a blockchain was, but I knew that this tx_comment feature was very interesting. Wait\u2026 can I just write whatever I want on the \nblockchain\n of an ongoing cryptocurrency? How do I do that?\n\n\nMy curiosity took me to \nAlexandria\n, where I registered and felt tempted to upload \nan album\n that I had recorded with some friends back in Tennessee, it did not work the first few times but it finally went through. In the process, I met \nDevon Read\n, the CEO of Alexandria himself and my first contact in the FLO community. I met him because I entered on \ntheir chat channel\n and started asking questions.\n\n\nAt this point, I only had a vague idea of how cryptocurrencies worked: I need to have an address\u2026 but where is the address stored? What is wallet? What is paper wallet? What happens to this address that I just made but will never use?\n\n\nAnyhow\u2026 after reading some blogs and wikis I later realized that Alexandria made me a wallet when I registered (thank you Alexandria) and also gave me an address. Cool, now I have a wallet, an address, how can I write on the blockchain?\n\n\n\n\nTo write in the FLO blockchain you just need to make a transaction. \u2014 \nJoseph Fiscella\n, lead dev of FLO project\n\u00b6\n\n\n\n\nWait what? That\u2019s it? No smart contract, no mess of OP_RETURN from bitcoin, no need to download the daemons? \n\n\nNo. All I needed to learn was how to make a transaction.\n\n\nMy first transaction in cryptocurrency\n\u00b6\n\n\nOk\u2026 so I made another address (by the click of a button in the Alexandria wallet), and now I just needed to make a transaction, and BAM. \n\n\nI am not sure which one was my very first transaction of all, but this is my first transaction with comment: \nb80cd\n\u2026\n\n\nMy first transaction programmatically\n\u00b6\n\n\nIt was more or less at this time that I discovered the Alexandria API and noticed what they call \n\u201cClient Library\u201d\n. Browsing the examples I found very interesting that I could send a transaction using \n\u201cFloVault\u201d\n (I had no idea what that was, but hey\u2026 there is so much to learn at once, gotta take it slow). \n\n\nLook how simple they made it look! If you want to make a transaction, you just have to sign in to your wallet:\n\n\n\n\nand\u2026\n\n\n\n\nBAM! Transaction magic will happen!!!\n\n\nOhhhh cool! Now I can write a few lines of javascript real quick to do that. I already have a wallet from Alexandria and\u2026 wait\u2026 this is a \u201cclient library\u201d and I don\u2019t want to expose the credentials of my wallet in the code (the your_identifier and your_password part of the declaration of the wallet).\n\n\nFine, I am sure I can write a Node command line application (server-side) that can do that in a heart beat. But it wasn\u2019t so easy\u2026 \n\n\nI was so amazed by the simplicity of making a transaction programmatically that I failed to read the \nhighlighted\n note in the Alexandria API documentation, that says:\n\n\n\n\nand because I did not read it I got back in the Alexandria chat and ask: \u201cWhere can I find the SimpleWallet.js file?\u201d They told me to download the new one, SimpleWlletFlorincoin.js, which I did, copied the file to my computer and tried to simply login to my wallet\u2026\n\n\nI don\u2019t remember now if I succeeded to do that or not, but \nI know for sure\n that I could \nnot\n make a transaction. Errors after errors and I thought I only needed to load the dependencies using \nrequire\n from node.js and done, but\u2026\n\n\n\n\nWhat happened next was a battle trying to halfway understand what was called what and finding out the dependencies needed, but after a few hours I had a working combo of code that worked on server side\u2026 and they said it couldn\u2019t be done.\n\n\n\n\nYou don\u2019t need to hassle that yourself, just copy: \nSimpleDeps.j\ns and \nSimpleWalletFlorincoin.js\n from the \nFlotorizer github\n and you are good to go. \n\n\n\n\nThis was a hack, the FLO team is working to release a npm package that will be able to do all that with even less hassle.\n\n\n\n\nNow I finally could execute \nmy first transaction programmatically\n. Here is the code (or something like that):\n\n\nrequire('./SimpleWalletFlorincoin.js')\n\nlet addresses = {\n    donor: 'OnEOfMyAddresses',\n    recipient: 'AnotherOfMyAddresses'\n}\n\nlet wallet = new Wallet(username, password)\n\nwallet.refreshBalances\nwallet.load(() => {\n    console.log('wallet ready')\n    wallet.sendCoins(addresses.donor, addresses.recipient, 0.001, 'testing local wallet', function(err, data) {\n        if (err) {\n            console.log('failed to send transaction')\n            throw err\n        }\n        console.log('sucess: ' + data.txid)\n    })\n})\n\n\n\n\nthen I just had to run: node firstTransaction.js and right there I have written on the FLO Blockchain. Amazing, isn\u2019t it?\n\n\nThe birth of Flotorizer\n\u00b6\n\n\nMonths earlier, in my collaboration with the California Pirate Party, I was thinking a lot about digital signatures, encryption and whatnot but all related to pursuit the development of a \nvoting system for liquid democracy\n. During that time I was interested in sha algorithms and how cool was that idea.\n\n\nWell\u2026 it occurred to me that I could put the sha-512 signature of a file in the FLO blockchain. At that moment, I realized that I could prove that a file with a specific content \nexisted\n at least at the time of the transaction.\n\n\nBefore I even thought about the rest, I already had a name for the application: Florincoin + notary + zer = Flotorizer. I even made a transaction for it: \nf9a1\u2026\n\n\n\n\nI know that the most accurate would be Flotarizer, but that doesn\u2019t sound good at all\u2026 I thought about Flotary but that was too close to \nRotary\n so I decided to go with Flotorizer.\n\n\n\n\nIn my first transaction, I used the shasum command line unix application to calculate the digital signature of a file and the snippet above to insert it in the block chain: \n8004\u2026\n\n\nThat was the moment I realized (it was a week full of epiphanies), I not only could prove the existence of the file but\u2026 wait for it\u2026 \n\n\nI didn\u2019t even need to tell anyone what the file was about, at all\n!!!\n\n\nSee, theSHA2 family of hash function generates a \nunique *enough\n* string for a given input. But you cannot figure out the input just by looking at the string. Thus, I can prove that a picture existed without showing it to anyone, only by calculating the sha-512 digital signature of the picture and posting on the FLO Blockchain.\n\n\nIf any one contested that the picture actually existed, then all I had to do is to calculated the signature with \nany independent sha-512 calculator\n and compare the result with the record in the Blockchain. No one can delete the record and the record is public, but nobody knows what it is proving until it is contested. Cool, huh?\n\n\nLastly, I realized that other people might want to use this too. So I thought about making the app public. The cost of a Flotorization is 0.001 FLOs in fees of the transaction and with 1 FLO at less than $0.10 I thought I could fund it with less than $1.00 and make the app free\u2026 and so I did.\n\n\nSo I decide to pack all that into a public app. But as a sympathizer of the pirates ideals of privacy, I wanted to have an app that was Zero Knowledge. I did not want to have any knowledge of what was flotorized\n\n\nThe backbones of Flotorizer\n\u00b6\n\n\nThis part is a bit more technical, but I promise that it is not that complicated.\n\n\nI used the \ncrypto\n library of \nNode.js\n with \nWebpack\n to build a code client-side that calculates the sha-512 digital signature of the file chosen by the user without having to \nEVER\n submit the file to the server.\n\n\nThat way, even as the creator of Flotorizer, I would never know what the file was about, even if I tried.\n\n\nOn the server-side, I used \nexpress.js\n to build literally two routes:\n\n\n\n\n\n\n/stats : Which returns the number of flotorizations so far\n\n\n\n\n\n\n/flotorize: a GET route that does all the magic\n\n\n\n\n\n\nThe client-side of the code, as soon as it finishes to calculate the digital signature, makes a GET request to/flotorize sending as parameters the sha-512 signature and the name of the file.\n\n\nThe server-side now attempts to make a transaction from my two addresses and puts the digital signature in the tx_comment field of the transaction:\n\n\nThis document has been flotorized: 1ED58159ADCF54A4753083F706089A4BC0CEAA55A8E973D431E7E056CE034FD1D5925096689E5494608DF0F246AC24D7BC89ADDB039CBCC13B8FCC47C8C245AE\n\n\n\n\n\nBy the way, I had to implement a lousy check to avoid double (or multiple) flotorizations of the same file. All because this hash 1ED5\u2026 has been flotorized probably over 100 times, haha. If the owner of the file is reading this, please let me know what the file that generates this signature is\u2026 or better yet, don\u2019t :)\n\n\n\n\nIf the transaction is successful, the server-side code uses pdfkit to generate a PDF receipt with the information about the name of the file and the transaction. It also encodes the link for the transaction in the \nFLO block explorer\n on a QR-code using qr-image.\n\n\nAs soon as the pdf is completed, server sends the pdf file back to the user and immediately deletes it from the server\u2019s storage. No database is required, no long term storage, nothing, as simple as it gets.\n\n\nWith the code running locally, all I had to to is to pass it to \nHeroku\n. To hide my credentials I use the Heroku environmental variables. Locally, I stripped the credentials from the code and use nf package to generate the environmental variables from a .env file that I sure included in my .gitignore.\n\n\nAnd there you have it. A VERY simple code that can let you prove that a certain content in a file existed at least prior to the time of transaction.\n\n\nLet me know if you have any questions or comments. I hope you too feel encouraged to adventure yourself in using this amazing infrastructure around the FLO Blockchain.\n\n\nAs for the future of Flotorizer, we are developing a new, more robust, version of it. We will always offer the current service for free and in the near future we will build a paid version (paid with FLOs only) that will offer the option to save your files as well. In that version, all the information will be encrypted client-side before it is sent to our servers, keeping the full privacy for our users.\n\n\nIf you want to support this development, donate to:\n\n\n\n\n\n\nFLO: F8YfuREuqCtW8MNj5LADczLoskgSDaNskn\n\n\n\n\n\n\nLTC: LarUzkftuCjWi1sAL8An7o6wohdz4vJxTq\n\n\n\n\n\n\nBTC: 1ArSXxcNTPbofJ1p79cg3ATd3cB5reqXGB\n\n\n\n\n\n\nXMR: 4LBX9sXW8dR8Aa55wvZhRj6WAUD1Tej6caLVv2tdkPH54njhYKTKfVMNxAtzD4P5DmiM5FAAi7Esg7EkEU3u2a98FzRy82YMaqn1xDdZCw\n\n\n\n\n\n\nIf you want to donate in any other crypto currency, just let me know.",
            "title": "Flotorizer.net"
        },
        {
            "location": "/building-dapps/flotorizer.net/#flotorizer-an-experiment-on-blockchain-for-newbies-by-davi-ortega-ortega_science",
            "text": "Let me preface this post by letting you know that I am not a developer, the only class related to programming that I ever took was 15 years ago, in Pascal \u2014 that\u2019s right, Pascal. I am a  scientist  and I learned how to program Python with friends, colleagues, the internet (thanks StackOverflow). My programming self-education was mostly oriented by challenges related to  bioinformatics  and scripting tools to analyze atomic trajectories of  molecular dynamics simulations .   All that to say that you don\u2019t need to know much about blockchain to make an app with  Flotorizer . Why not? Because  Alexandria API  is a thing.",
            "title": "Flotorizer: An experiment on Blockchain for newbies. - by Davi Ortega @ortega_science"
        },
        {
            "location": "/building-dapps/flotorizer.net/#the-beginnings",
            "text": "I started to learn Node.js about two years ago \u2014 not full time, I am a scientist remember? \u2014 because bioinformatics applications are much more fun (and useful) if they are interactive, and on the web  so you can brag about it by sharing a link . I went to one of those  NodeTogether  seminar given by  ashley williams  and learned enough to really get me going with Node.js. (Thanks  ashley ).   I also had a very good friend, Luke Ulrich, who knows a lot of javascript and were working on a project with me\u2026 anyways\u2026 two years in and I am embarrassed to say that I am still fumbling around with concepts such as promises and callbacks \u2014 fun huh?  Anyways, when I started to check out the then florincoin ecosystem, I barely knew what a blockchain was, but I knew that this tx_comment feature was very interesting. Wait\u2026 can I just write whatever I want on the  blockchain  of an ongoing cryptocurrency? How do I do that?  My curiosity took me to  Alexandria , where I registered and felt tempted to upload  an album  that I had recorded with some friends back in Tennessee, it did not work the first few times but it finally went through. In the process, I met  Devon Read , the CEO of Alexandria himself and my first contact in the FLO community. I met him because I entered on  their chat channel  and started asking questions.  At this point, I only had a vague idea of how cryptocurrencies worked: I need to have an address\u2026 but where is the address stored? What is wallet? What is paper wallet? What happens to this address that I just made but will never use?  Anyhow\u2026 after reading some blogs and wikis I later realized that Alexandria made me a wallet when I registered (thank you Alexandria) and also gave me an address. Cool, now I have a wallet, an address, how can I write on the blockchain?",
            "title": "The beginnings"
        },
        {
            "location": "/building-dapps/flotorizer.net/#to-write-in-the-flo-blockchain-you-just-need-to-make-a-transaction-joseph-fiscella-lead-dev-of-flo-project",
            "text": "Wait what? That\u2019s it? No smart contract, no mess of OP_RETURN from bitcoin, no need to download the daemons?   No. All I needed to learn was how to make a transaction.",
            "title": "To write in the FLO blockchain you just need to make a transaction. \u2014 Joseph Fiscella, lead dev of FLO project"
        },
        {
            "location": "/building-dapps/flotorizer.net/#my-first-transaction-in-cryptocurrency",
            "text": "Ok\u2026 so I made another address (by the click of a button in the Alexandria wallet), and now I just needed to make a transaction, and BAM.   I am not sure which one was my very first transaction of all, but this is my first transaction with comment:  b80cd \u2026",
            "title": "My first transaction in cryptocurrency"
        },
        {
            "location": "/building-dapps/flotorizer.net/#my-first-transaction-programmatically",
            "text": "It was more or less at this time that I discovered the Alexandria API and noticed what they call  \u201cClient Library\u201d . Browsing the examples I found very interesting that I could send a transaction using  \u201cFloVault\u201d  (I had no idea what that was, but hey\u2026 there is so much to learn at once, gotta take it slow).   Look how simple they made it look! If you want to make a transaction, you just have to sign in to your wallet:   and\u2026   BAM! Transaction magic will happen!!!  Ohhhh cool! Now I can write a few lines of javascript real quick to do that. I already have a wallet from Alexandria and\u2026 wait\u2026 this is a \u201cclient library\u201d and I don\u2019t want to expose the credentials of my wallet in the code (the your_identifier and your_password part of the declaration of the wallet).  Fine, I am sure I can write a Node command line application (server-side) that can do that in a heart beat. But it wasn\u2019t so easy\u2026   I was so amazed by the simplicity of making a transaction programmatically that I failed to read the  highlighted  note in the Alexandria API documentation, that says:   and because I did not read it I got back in the Alexandria chat and ask: \u201cWhere can I find the SimpleWallet.js file?\u201d They told me to download the new one, SimpleWlletFlorincoin.js, which I did, copied the file to my computer and tried to simply login to my wallet\u2026  I don\u2019t remember now if I succeeded to do that or not, but  I know for sure  that I could  not  make a transaction. Errors after errors and I thought I only needed to load the dependencies using  require  from node.js and done, but\u2026   What happened next was a battle trying to halfway understand what was called what and finding out the dependencies needed, but after a few hours I had a working combo of code that worked on server side\u2026 and they said it couldn\u2019t be done.   You don\u2019t need to hassle that yourself, just copy:  SimpleDeps.j s and  SimpleWalletFlorincoin.js  from the  Flotorizer github  and you are good to go.    This was a hack, the FLO team is working to release a npm package that will be able to do all that with even less hassle.   Now I finally could execute  my first transaction programmatically . Here is the code (or something like that):  require('./SimpleWalletFlorincoin.js')\n\nlet addresses = {\n    donor: 'OnEOfMyAddresses',\n    recipient: 'AnotherOfMyAddresses'\n}\n\nlet wallet = new Wallet(username, password)\n\nwallet.refreshBalances\nwallet.load(() => {\n    console.log('wallet ready')\n    wallet.sendCoins(addresses.donor, addresses.recipient, 0.001, 'testing local wallet', function(err, data) {\n        if (err) {\n            console.log('failed to send transaction')\n            throw err\n        }\n        console.log('sucess: ' + data.txid)\n    })\n})  then I just had to run: node firstTransaction.js and right there I have written on the FLO Blockchain. Amazing, isn\u2019t it?",
            "title": "My first transaction programmatically"
        },
        {
            "location": "/building-dapps/flotorizer.net/#the-birth-of-flotorizer",
            "text": "Months earlier, in my collaboration with the California Pirate Party, I was thinking a lot about digital signatures, encryption and whatnot but all related to pursuit the development of a  voting system for liquid democracy . During that time I was interested in sha algorithms and how cool was that idea.  Well\u2026 it occurred to me that I could put the sha-512 signature of a file in the FLO blockchain. At that moment, I realized that I could prove that a file with a specific content  existed  at least at the time of the transaction.  Before I even thought about the rest, I already had a name for the application: Florincoin + notary + zer = Flotorizer. I even made a transaction for it:  f9a1\u2026   I know that the most accurate would be Flotarizer, but that doesn\u2019t sound good at all\u2026 I thought about Flotary but that was too close to  Rotary  so I decided to go with Flotorizer.   In my first transaction, I used the shasum command line unix application to calculate the digital signature of a file and the snippet above to insert it in the block chain:  8004\u2026  That was the moment I realized (it was a week full of epiphanies), I not only could prove the existence of the file but\u2026 wait for it\u2026   I didn\u2019t even need to tell anyone what the file was about, at all !!!  See, theSHA2 family of hash function generates a  unique *enough * string for a given input. But you cannot figure out the input just by looking at the string. Thus, I can prove that a picture existed without showing it to anyone, only by calculating the sha-512 digital signature of the picture and posting on the FLO Blockchain.  If any one contested that the picture actually existed, then all I had to do is to calculated the signature with  any independent sha-512 calculator  and compare the result with the record in the Blockchain. No one can delete the record and the record is public, but nobody knows what it is proving until it is contested. Cool, huh?  Lastly, I realized that other people might want to use this too. So I thought about making the app public. The cost of a Flotorization is 0.001 FLOs in fees of the transaction and with 1 FLO at less than $0.10 I thought I could fund it with less than $1.00 and make the app free\u2026 and so I did.  So I decide to pack all that into a public app. But as a sympathizer of the pirates ideals of privacy, I wanted to have an app that was Zero Knowledge. I did not want to have any knowledge of what was flotorized",
            "title": "The birth of Flotorizer"
        },
        {
            "location": "/building-dapps/flotorizer.net/#the-backbones-of-flotorizer",
            "text": "This part is a bit more technical, but I promise that it is not that complicated.  I used the  crypto  library of  Node.js  with  Webpack  to build a code client-side that calculates the sha-512 digital signature of the file chosen by the user without having to  EVER  submit the file to the server.  That way, even as the creator of Flotorizer, I would never know what the file was about, even if I tried.  On the server-side, I used  express.js  to build literally two routes:    /stats : Which returns the number of flotorizations so far    /flotorize: a GET route that does all the magic    The client-side of the code, as soon as it finishes to calculate the digital signature, makes a GET request to/flotorize sending as parameters the sha-512 signature and the name of the file.  The server-side now attempts to make a transaction from my two addresses and puts the digital signature in the tx_comment field of the transaction:  This document has been flotorized: 1ED58159ADCF54A4753083F706089A4BC0CEAA55A8E973D431E7E056CE034FD1D5925096689E5494608DF0F246AC24D7BC89ADDB039CBCC13B8FCC47C8C245AE   By the way, I had to implement a lousy check to avoid double (or multiple) flotorizations of the same file. All because this hash 1ED5\u2026 has been flotorized probably over 100 times, haha. If the owner of the file is reading this, please let me know what the file that generates this signature is\u2026 or better yet, don\u2019t :)   If the transaction is successful, the server-side code uses pdfkit to generate a PDF receipt with the information about the name of the file and the transaction. It also encodes the link for the transaction in the  FLO block explorer  on a QR-code using qr-image.  As soon as the pdf is completed, server sends the pdf file back to the user and immediately deletes it from the server\u2019s storage. No database is required, no long term storage, nothing, as simple as it gets.  With the code running locally, all I had to to is to pass it to  Heroku . To hide my credentials I use the Heroku environmental variables. Locally, I stripped the credentials from the code and use nf package to generate the environmental variables from a .env file that I sure included in my .gitignore.  And there you have it. A VERY simple code that can let you prove that a certain content in a file existed at least prior to the time of transaction.  Let me know if you have any questions or comments. I hope you too feel encouraged to adventure yourself in using this amazing infrastructure around the FLO Blockchain.  As for the future of Flotorizer, we are developing a new, more robust, version of it. We will always offer the current service for free and in the near future we will build a paid version (paid with FLOs only) that will offer the option to save your files as well. In that version, all the information will be encrypted client-side before it is sent to our servers, keeping the full privacy for our users.  If you want to support this development, donate to:    FLO: F8YfuREuqCtW8MNj5LADczLoskgSDaNskn    LTC: LarUzkftuCjWi1sAL8An7o6wohdz4vJxTq    BTC: 1ArSXxcNTPbofJ1p79cg3ATd3cB5reqXGB    XMR: 4LBX9sXW8dR8Aa55wvZhRj6WAUD1Tej6caLVv2tdkPH54njhYKTKfVMNxAtzD4P5DmiM5FAAi7Esg7EkEU3u2a98FzRy82YMaqn1xDdZCw    If you want to donate in any other crypto currency, just let me know.",
            "title": "The backbones of Flotorizer"
        },
        {
            "location": "/support-directory/",
            "text": "Support Reference Directory\n\u00b6\n\n\nThe purpose of this page is to provide a directory for all the mediums of information that the FLO team is using for support and updates.\n\n\nChat with us at:\n\u00b6\n\n\n\n\nForum\n\n\nSlack\n\n\nTelegram\n\n\nBitcointalk\n\n\n\n\nJoin us on Slack for support. You can receive an invite to the FLO Slack by visiting \nhttps://florincoin.slack.com\n. Once you\u2019ve signed up, you can join using your web browser by visiting \nhttps://florincoin.slack.com\n or by downloading one of Slack\u2019s desktop or mobile applications.\n\n\nFollow us at:\n\u00b6\n\n\n\n\nTwitter\n\n\nFacebook\n\n\nMedium\n\n\nReddit\n\n\nYoutube\n\n\n\n\nCode with us:\n\u00b6\n\n\n\n\nGithub",
            "title": "Support Directory"
        },
        {
            "location": "/support-directory/#support-reference-directory",
            "text": "The purpose of this page is to provide a directory for all the mediums of information that the FLO team is using for support and updates.",
            "title": "Support Reference Directory"
        },
        {
            "location": "/support-directory/#chat-with-us-at",
            "text": "Forum  Slack  Telegram  Bitcointalk   Join us on Slack for support. You can receive an invite to the FLO Slack by visiting  https://florincoin.slack.com . Once you\u2019ve signed up, you can join using your web browser by visiting  https://florincoin.slack.com  or by downloading one of Slack\u2019s desktop or mobile applications.",
            "title": "Chat with us at:"
        },
        {
            "location": "/support-directory/#follow-us-at",
            "text": "Twitter  Facebook  Medium  Reddit  Youtube",
            "title": "Follow us at:"
        },
        {
            "location": "/support-directory/#code-with-us",
            "text": "Github",
            "title": "Code with us:"
        }
    ]
}